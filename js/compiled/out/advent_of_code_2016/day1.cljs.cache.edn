{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name advent-of-code-2016.day1, :imports nil, :requires {sab sablono.core, sablono.core sablono.core}, :uses nil, :defs {abs {:protocol-inline nil, :meta {:file "C:\\Users\\Andrea Tupini\\Workspace\\advent-of-code-2016\\src\\advent_of_code_2016\\day1.cljs", :line 4, :column 7, :end-line 4, :end-column 10, :arglists (quote ([x]))}, :name advent-of-code-2016.day1/abs, :variadic false, :file "src\\advent_of_code_2016\\day1.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, calc-end-position {:protocol-inline nil, :meta {:file "C:\\Users\\Andrea Tupini\\Workspace\\advent-of-code-2016\\src\\advent_of_code_2016\\day1.cljs", :line 8, :column 7, :end-line 8, :end-column 24, :arglists (quote ([directs])), :doc "Takes the directions 'L1, R5, R3...' and computes the end position in a cartesian system. Returns [xpos, ypos, dir] where dir is the direction we are facing"}, :name advent-of-code-2016.day1/calc-end-position, :variadic false, :file "src\\advent_of_code_2016\\day1.cljs", :end-column 24, :method-params ([directs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([directs])), :doc "Takes the directions 'L1, R5, R3...' and computes the end position in a cartesian system. Returns [xpos, ypos, dir] where dir is the direction we are facing"}, solution {:protocol-inline nil, :meta {:file "C:\\Users\\Andrea Tupini\\Workspace\\advent-of-code-2016\\src\\advent_of_code_2016\\day1.cljs", :line 29, :column 7, :end-line 29, :end-column 15, :arglists (quote ([directs]))}, :name advent-of-code-2016.day1/solution, :variadic false, :file "src\\advent_of_code_2016\\day1.cljs", :end-column 15, :method-params ([directs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([directs]))}, get-input {:protocol-inline nil, :meta {:file "C:\\Users\\Andrea Tupini\\Workspace\\advent-of-code-2016\\src\\advent_of_code_2016\\day1.cljs", :line 37, :column 7, :end-line 37, :end-column 16, :arglists (quote ([]))}, :name advent-of-code-2016.day1/get-input, :variadic false, :file "src\\advent_of_code_2016\\day1.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, set-result! {:protocol-inline nil, :meta {:file "C:\\Users\\Andrea Tupini\\Workspace\\advent-of-code-2016\\src\\advent_of_code_2016\\day1.cljs", :line 43, :column 7, :end-line 43, :end-column 18, :arglists (quote ([res]))}, :name advent-of-code-2016.day1/set-result!, :variadic false, :file "src\\advent_of_code_2016\\day1.cljs", :end-column 18, :method-params ([res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([res]))}, display {:protocol-inline nil, :meta {:file "C:\\Users\\Andrea Tupini\\Workspace\\advent-of-code-2016\\src\\advent_of_code_2016\\day1.cljs", :line 46, :column 7, :end-line 46, :end-column 14, :arglists (quote ([]))}, :name advent-of-code-2016.day1/display, :variadic false, :file "src\\advent_of_code_2016\\day1.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {sab sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc nil}